*****************************Day 16: Install and Configure Nginx as an LBR***************************


Day by day traffic is increasing on one of the websites managed by the Nautilus production support team. Therefore, the team has observed a degradation in website performance. Following discussions about this issue, the team has decided to deploy this application on a high availability stack i.e on Nautilus infra in Stratos DC. They started the migration last month and it is almost done, as only the LBR server configuration is pending. Configure LBR server as per the information given below:



a. Install nginx on LBR (load balancer) server.


b. Configure load-balancing with the an http context making use of all App Servers. Ensure that you update only the main Nginx configuration file located at /etc/nginx/nginx.conf.


c. Make sure you do not update the apache port that is already defined in the apache configuration on all app servers, also make sure apache service is up and running on all app servers.


d. Once done, you can access the website using StaticApp button on the top bar.


Solution : 

thor@jumphost ~$ ssh loki@stlb01
The authenticity of host 'stlb01 (172.16.238.14)' can't be established.
ED25519 key fingerprint is SHA256:pkJHxjy+4mbxpKOrTMHqHpAqrAiKqNLnGnLtyBGZk08.
This key is not known by any other names
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
Warning: Permanently added 'stlb01' (ED25519) to the list of known hosts.
loki@stlb01's password: 
[loki@stlb01 ~]$ sudo yum install nginx -y

[loki@stlb01 ~]$ sudo systemctl enable nginx
Created symlink /etc/systemd/system/multi-user.target.wants/nginx.service â†’ /usr/lib/systemd/system/nginx.service.

[loki@stlb01 ~]$ sudo systemctl start nginx

[loki@stlb01 ~]$ sudo systemctl status httpd
Unit httpd.service could not be found.

[loki@stlb01 ~]$ sudo ss -tulnp |grep httpd


[loki@stlb01 ~]$ ps aux | grep httpd
loki        2774  0.0  0.0   3720  1996 pts/0    S+   16:30   0:00 grep --color=auto httpd

[loki@stlb01 ~]$ ssh tony@stapp01

[tony@stapp01 ~]$ ps aux | grep httpd
root        1664  0.0  0.0  21068  9632 ?        Ss   16:16   0:00 /usr/sbin/httpd -DFOREGROUND
apache      1671  0.0  0.0  22892  6236 ?        S    16:16   0:00 /usr/sbin/httpd -DFOREGROUND
apache      1672  0.0  0.0 2161968 7464 ?        Sl   16:16   0:00 /usr/sbin/httpd -DFOREGROUND
apache      1673  0.0  0.0 2424176 7464 ?        Sl   16:16   0:00 /usr/sbin/httpd -DFOREGROUND
apache      1674  0.0  0.0 2227504 7464 ?        Sl   16:16   0:00 /usr/sbin/httpd -DFOREGROUND
tony        2436  0.0  0.0   3724  1980 pts/0    S+   16:32   0:00 grep --color=auto httpd

[tony@stapp01 ~]$ sudo ss -tulnp | grep httpd
We trust you have received the usual lecture from the local System
Administrator. It usually boils down to these three things:

    #1) Respect the privacy of others.
    #2) Think before you type.
    #3) With great power comes great responsibility.

[sudo] password for tony: 
tcp   LISTEN 0      511          0.0.0.0:8082       0.0.0.0:*    users:(("httpd",pid=1674,fd=3),("httpd",pid=1673,fd=3),("httpd",pid=1672,fd=3),("httpd",pid=1664,fd=3))

[tony@stapp01 ~]$ logout
Connection to stapp01 closed.

[loki@stlb01 ~]$ sudo vi /etc/nginx/nginx.conf
[sudo] password for loki: 

[loki@stlb01 ~]$ cat /etc/nginx/nginx.conf


[loki@stlb01 ~]$ ssh steve@stapp02

[steve@stapp02 ~]$ sudo ss -tulnp | grep httpd
tcp   LISTEN 0      511          0.0.0.0:8082       0.0.0.0:*    users:(("httpd",pid=1667,fd=3),("httpd",pid=1666,fd=3),("httpd",pid=1665,fd=3),("httpd",pid=1657,fd=3))

[steve@stapp02 ~]$ logout 
Connection to stapp02 closed.


[loki@stlb01 ~]$ sudo vi /etc/nginx/nginx.conf


[loki@stlb01 ~]$ cat /etc/nginx/nginx.conf
# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 4096;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

      upstream app-servers {
        server stapp01:8082;
        server stapp02:8082;
        server stapp03:8082;
}


    server {
        listen       80;
        listen       [::]:80;
        server_name  _;
        root         /usr/share/nginx/html;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;
        location / {
         proxy_pass http://app-servers;
         proxy_set_header Host $host;
         proxy_set_header X-Real-IP $remote_addr; 
         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
         proxy_set_header X-Forwarded-Proto $scheme
}


        error_page 404 /404.html;
        location = /404.html {
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
        }
    }

# Settings for a TLS enabled server.
#
#    server {
#        listen       443 ssl http2;
#        listen       [::]:443 ssl http2;
#        server_name  _;
#        root         /usr/share/nginx/html;
#
#        ssl_certificate "/etc/pki/nginx/server.crt";
#        ssl_certificate_key "/etc/pki/nginx/private/server.key";
#        ssl_session_cache shared:SSL:1m;
#        ssl_session_timeout  10m;
#        ssl_ciphers PROFILE=SYSTEM;
#        ssl_prefer_server_ciphers on;
#
#        # Load configuration files for the default server block.
#        include /etc/nginx/default.d/*.conf;
#
#        error_page 404 /404.html;
#            location = /40x.html {
#        }
#
#        error_page 500 502 503 504 /50x.html;
#            location = /50x.html {
#        }
#    }

}


[loki@stlb01 ~]$ sudo vi /etc/nginx/nginx.conf

[loki@stlb01 ~]$ sudo nginx -t
nginx: the configuration file /etc/nginx/nginx.conf syntax is ok
nginx: configuration file /etc/nginx/nginx.conf test is successful

[loki@stlb01 ~]$ sudo systemctl restart nginx

[loki@stlb01 ~]$ sudo systemctl reload nginx




